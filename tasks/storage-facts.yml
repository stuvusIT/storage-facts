---
- name: Create temporary hostvars file
  tempfile:
    state: file
    suffix: json
  register: tempfile
  changed_when: False

- name: Write hostvars to file
  copy:
    content: "{{ hostvars }}"
    dest: "{{ tempfile.path }}"
  changed_when: False

- name: Run storage-facts script
  script: "scripts/storage-facts.py {{ ansible_hostname }} {{ tempfile.path }}"
  register: storage_factgen
  changed_when: False

- name: Set storage facts
  set_fact:
    zfs_filesystems: "{{ (storage_factgen.stdout|from_json).new_hostvars.zfs_filesystems }}"
    zvols: "{{ (storage_factgen.stdout|from_json).new_hostvars.zvols }}"
    iscsi_targets: "{{ (storage_factgen.stdout|from_json).new_hostvars.iscsi_targets }}"
    iscsi_disk_path_prefix: "{{ (storage_factgen.stdout|from_json).new_hostvars.iscsi_disk_path_prefix }}"

- name: Remove temporary hostvars file
  file:
    path: tempfile.path
    state: absent

- name: "There are {{ (storage_factgen.stdout|from_json).failed_hosts.size|length }} VMs without size var"
  fail:
    msg: "{{ item }}"
  with_items: "{{ (storage_factgen.stdout|from_json).failed_hosts.size }}"
  failed_when: (storage_factgen.stdout|from_json).failed_hosts.size|length>0

- name: "There are {{ (storage_factgen.stdout|from_json).failed_hosts.org|length }} VMs without organization var"
  fail: 
    msg: "{{ item }}"
  with_items: "{{ (storage_factgen.stdout|from_json).failed_hosts.org }}"
  failed_when: (storage_factgen.stdout|from_json).failed_hosts.org|length>0
